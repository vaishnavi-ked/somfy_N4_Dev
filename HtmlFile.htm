<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Niagara 4 Alarm Console</title>
    <script type="text/javascript">
        var require = {
            paths: {
                "nmodule": "/module",
                "baja": "/module/bajaScript/rc/plugin/baja",
                "bajaScript": "/module/bajaScript/rc",
                "bajaux": "/module/bajaux/rc",
                "lex": "/module/js/rc/lex/lexplugin",
                "log": "/module/js/rc/log/logPlugin",
                "css": "/module/js/com/tridium/js/ext/require/css",
                "jquery": "/module/js/rc/jquery/jquery",
                "Handlebars": "/module/js/rc/handlebars/handlebars",
                "Promise": "/module/js/rc/bluebird/bluebird",
                "hbs": "/module/js/rc/require-handlebars-plugin/hbs",
                "i18nprecompile": "/module/js/rc/require-handlebars-plugin/hbs/i18nprecompile",
                "json2": "/module/js/rc/require-handlebars-plugin/hbs/json2",
                "underscore": "/module/js/rc/underscore/underscore"
                
            },
            hbs: {
                disableI18n: true
            }
        };
        console.log("RequireJS paths set:", require);
    </script>
    <script type="text/javascript" 
        data-main="/module/bajaScript/rc/plugin/baja" 
        src="file:^rc/requireJs.js"></script>
        
         <!-- Add some styles for better visualization -->
    <style>
        .acked-alarm-container {
            margin-top: 20px;
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        .alarm-card {
            border: 1px solid blue;
            padding: 10px;
            border-radius: 5px;
            background-color: skyblue;
            width: 250px;
            padding: 10px;
            margin: 10px;
            box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
            font-family: Arial, sans-serif;
        }
    </style>
</head>
<body>
    <h1>Niagara 4 - Alarm Console</h1>

    <h2>Alarm Status:</h2>
    
    <h3 id="alarms"></h3>
    <table id="alarmDetails" border="1">
        <thead>
            <tr>
                <th>Timestamp</th>
                <th>UUID</th>
                <th>Source State</th>
                <th>Ack State</th>
                <th>Ack Required</th>
                <th>Source</th>
                <th>Alarm Class</th>
                <th>Priority</th>
                <th>Normal Time</th>
                <th>Ack Time</th>
                <th>User</th>
                <th>Alarm Data</th>
                <th>Alarm Transition</th>
                <th>Last Updated</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <div class="container mt-4">
        <div id="cardsContainer" class="acked-alarm-container"></div>
    </div>
<script type="text/javascript">
console.log("Type of require:", typeof require);
console.log("Require object:", require);

// require(["baja!"], function (baja) {
//     console.log("BajaScript is ready");

//     var query = baja.Ord.make("local:|fox:|alarm:|bql:select * where ackState = 'acked'");
//     console.log("Query created:", query.toString());

//     query.get().then(function (table) {
//         console.log("Query result received:", table);

//         if (!table || typeof table.cursor !== "function") {
//             console.error("Error: The result is not a valid table.");
//             return;
//         }

//         var columns = table.getColumns();
//         console.log("Columns extracted:", columns.map(col => col.getName()));

//         console.log("Fetching alarm data...");

//         var tableBody = document.querySelector("#alarmDetails tbody");
//         console.log("Table body selected:", tableBody);
//         tableBody.innerHTML = ""; 
//         console.log("Table cleared before inserting new data.");
//         let rowindex = 0;
//         // let rcolumnIndex = 0;
        
//         return table.cursor({
//             each: function () {
              
//                 // Counter to track the current row

//                 // rowIndex++;
                
                
//             //             if (rowIndex === 4) { // Targeting row number 4
//             //                 let columnIndex = 11; // Column index starts from 0, so column 3 is index 2
//             //                 let columnName = columns[columnIndex].getName(); // Get column name dynamically
//             //                 let cellData = this.get(columnName); // Fetch data from the row
                
//             //                 console.log(`Raw Cell Data:`, cellData);
//             // console.log(`Type of Cell Data:`, typeof cellData);

//             // // Convert cellData to a string (if not already)
//             // let cellDataStr = String(cellData);

//             // // Extract "msgText" value
//             // let match = cellDataStr.match(/msgText=([^,]*)/);
//             // let msgText = match ? match[1] : "Not Found";

//             // console.log(`Extracted msgText:`, msgText);
                
//             //                 // Set the value in the HTML element with id "alarms"
//             //                 document.getElementById("alarms").innerHTML = msgText;
//             //             }

//                 console.log("Processing new row...");
//                 var rowData = [];
//                 columns.forEach(col => {
//                     var cellData = this.get(col.getName());
//                     console.log(`Column ${col.getName()} Data:`, cellData);
//                     rowData.push(cellData);
//                 });

//                 console.log("Row Data Constructed:", rowData.join(", "));

//                 var newRow = document.createElement("tr");
//                 console.log("New row created:", newRow);

//                 rowData.forEach(data => {
//                     var cell = document.createElement("td");
//                     cell.textContent = data;
//                     newRow.appendChild(cell);
//                     console.log("Cell added to row:", cell);
//                 });

//                 tableBody.appendChild(newRow);
//                 console.log("Row appended to table body.");
                
//                 let maxRows = rowData.length; // Assuming 'data' is an array of rows
//                 let maxColumns = columns.length;
//                 console.log("Maximum Rows" + maxRows);
//                 console.log("Maximum Colums" + maxColumns);
                                
//             //       for (let rowIndex = 0; rowIndex < maxRows; rowIndex++) { // Loop through all rows
//             //         for (let columnIndex = 0; columnIndex < maxColumns; columnIndex++) { // Loop through all columns
//             //             // console.log(`Processing row ${rowIndex}, column ${columnIndex}`);
//             //             let columnName = columns[columnIndex].getName();
//             //             // console.log("column added" + columnName);
                        
//             //             if(columnName=="alarmData")
//             //             {
//             //               console.log("column added alarm data successfully");
//             //               let cellData = this.get(columnName); // Fetch data from the row
//             //               console.log("column added" + columnName);
                
//             // //                 console.log(`Raw Cell Data:`, cellData);
//             // // console.log(`Type of Cell Data:`, typeof cellData);

//             // // Convert cellData to a string (if not already)
//             // let cellDataStr = String(cellData);

//             // // Extract "msgText" value
//             // let match = cellDataStr.match(/msgText=([^,]*)/);
//             // let msgText = match ? match[1] : "Not Found";

//             // console.log(`Extracted msgText:`, msgText);
                
//             //                 // Set the value in the HTML element with id "alarms"
//             //                 document.getElementById("alarms").innerHTML = msgText;
                            
//             //                 let card = document.createElement("div");
//             // card.className = "col-md-4"; // Bootstrap grid for responsive layout

//             // card.innerHTML = `
//             //     <div class="card shadow-sm mb-3">
//             //         <div class="card-body">
//             //             <h5 class="card-title">Message ${rowIndex}</h5>
//             //             <p class="card-text">${msgText}</p>
//             //         </div>
//             //     </div>
//             // `;

//             // cardsContainer.appendChild(card);
//             //             }
                        
                        
//             // //                 let cellData = this.get(columnName); // Fetch data from the row
                
//             // //                 console.log(`Raw Cell Data:`, cellData);
//             // // console.log(`Type of Cell Data:`, typeof cellData);

//             // // // Convert cellData to a string (if not already)
//             // // let cellDataStr = String(cellData);

//             // // // Extract "msgText" value
//             // // let match = cellDataStr.match(/msgText=([^,]*)/);
//             // // let msgText = match ? match[1] : "Not Found";

//             // // console.log(`Extracted msgText:`, msgText);
                
//             // //                 // Set the value in the HTML element with id "alarms"
//             // //                 document.getElementById("alarms").innerHTML = msgText;
//             //         }
//             //     }
//             for (let columnIndex = 0; columnIndex < maxColumns; columnIndex++) { // Loop through all rows
//     let columnName = columns[columnIndex].getName();
//         // console.log("column added" + columnName);
        
//         if(columnName=="alarmData")
//         {
//           rowindex++;
//           console.log("column added alarm data successfully");
//           let cellData = this.get(columnName); // Fetch data from the row
//           console.log("column added" + columnName);

// //                 console.log(`Raw Cell Data:`, cellData);
// // console.log(`Type of Cell Data:`, typeof cellData);

// // Convert cellData to a string (if not already)
// let cellDataStr = String(cellData);

// // Extract "msgText" value
// let match = cellDataStr.match(/msgText=([^,]*)/);
// let msgText = match ? match[1] : "Not Found";

// console.log(`Extracted msgText:`, msgText);

//             // Set the value in the HTML element with id "alarms"
//             document.getElementById("alarms").innerHTML = msgText;
            
//             let card = document.createElement("div");
// card.classList.add("alarm-card"); // Bootstrap grid for responsive layout

// card.innerHTML = `
// <div class="card shadow-sm mb-3">
//     <div class="card-body">
//         <h5 class="card-title">Message ${rowindex}</h5>
//         <p class="card-text">${msgText}</p>
//         <p class="card-text">${msgText}</p>
//     </div>
// </div>
// `;

// cardsContainer.appendChild(card);
//         }
    
// }
//             }
//         });

//     }).then(function () {
//         console.log("Cursor iteration completed successfully.");
//     }).catch(function (error) {
//         console.error("Error fetching alarm data:", error);
//     });

// });

require(["baja!"], function (baja) {

    console.log("BajaScript is ready");

    var query = baja.Ord.make("local:|fox:|alarm:|bql:select * where ackState = 'acked'");
    console.log("Query created:", query.toString());

    query.get().then(function (table) {
        console.log("Query result received:", table);

        if (!table || typeof table.cursor !== "function") {
            console.error("Error: The result is not a valid table.");
            return;
        }

        var columns = table.getColumns();
        console.log("Columns extracted:", columns.map(col => col.getName()));

        var tableBody = document.querySelector("#alarmDetails tbody");
        tableBody.innerHTML = ""; // Clear existing data

        var cardsContainer = document.getElementById("cardsContainer");
        cardsContainer.innerHTML = ""; // Clear existing cards

        return table.cursor({
            each: function () {
                console.log("Processing new row...");
                var rowData = [];
                var dateStr = ""; // To store extracted date
                var timeStr = ""; // To store extracted time
                var alarmMessage = ""; // Extracted alarm message

                columns.forEach(col => {
                    var cellData = this.get(col.getName());
                    console.log(`Column ${col.getName()} Data:`, cellData);

                    if (col.getName() === "timestamp") {
                        // Convert timestamp to Date object
                        let timestamp = new Date(cellData);

                        // Extract Date (YYYY-MM-DD)
                        dateStr = timestamp.toISOString().split("T")[0];

                        // Extract and format Time (hh:mm AM/PM)
                        let hours = timestamp.getHours();
                        let minutes = timestamp.getMinutes();
                        let ampm = hours >= 12 ? "PM" : "AM";
                        hours = hours % 12 || 12; // Convert 24-hour to 12-hour format
                        minutes = minutes.toString().padStart(2, "0"); // Ensure two digits
                        timeStr = `${hours}:${minutes} ${ampm}`;
                    }

                    if (col.getName() === "alarmData") {
                        // Extract msgText from alarmData
                        let cellDataStr = String(cellData);
                        let match = cellDataStr.match(/msgText=([^,]*)/);
                        alarmMessage = match ? match[1] : "Not Found";
                    }

                    rowData.push(cellData);
                });

                console.log("Row Data Constructed:", rowData.join(", "));

                // Append row to table
                var newRow = document.createElement("tr");

                // Add Date Column
                var dateCell = document.createElement("td");
                dateCell.textContent = dateStr;
                newRow.appendChild(dateCell);

                // Add Time Column (hh:mm AM/PM)
                var timeCell = document.createElement("td");
                timeCell.textContent = timeStr;
                newRow.appendChild(timeCell);

                // Add other data (if needed)
                rowData.forEach(data => {
                    var cell = document.createElement("td");
                    cell.textContent = data;
                    newRow.appendChild(cell);
                });

                tableBody.appendChild(newRow);

                // Create a card for the alarm with date & time
                let card = document.createElement("div");
                card.className = "col-md-4";
                card.innerHTML = `
                    <div class="alarm-card">
                        <h4>Alarm</h4>
                        <p><strong>Date:</strong> ${dateStr}</p>
                        <p><strong>Time:</strong> ${timeStr}</p>
                        <p><strong>Message:</strong> ${alarmMessage}</p>
                    </div>
                `;

                cardsContainer.appendChild(card);
            }
        });
    }).catch(function (error) {
        console.error("Error fetching alarms:", error);
    });
});
</script>
<script>

// require(["baja!"], function (baja) {
//     console.log("BajaScript alarmspace is ready");

// baja.Ord.make("alarm:AlarmService").get()
//     .then(function (alarmService) {
//         console.log("Retrieved AlarmService:", alarmService);

//         // Query for acknowledged alarms
//         return alarmService.queryAlarms()
//             .then(function (alarms) {
//                 let acknowledgedAlarms = alarms.get().filter(alarm => alarm.get("acked"));
//                 displayAlarms(acknowledgedAlarms);
//             });
//     })
//     .catch(err => console.error("Error retrieving alarms:", err));


// });
 
require.config({
    paths: {
        baja: "/module/bajaScript/rc/plugin/baja"
    }
});

require(["baja!"], function (baja) {
  //   console.log("Baja Loaded:", baja);
baja.start({
    username: "admin",
    password: "admin123",
    host: "http://localhost",
    port: 80
}).then(() => {
    console.log("Baja framework started successfully.");
}).catch(err => {
    console.error("Error starting Baja framework:", err);
});


});





</script>
</body>
</html>
